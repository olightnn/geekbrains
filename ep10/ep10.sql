-- Практическое задание по теме “Администрирование MySQL” (эта тема изучается по вашему желанию)
-- 1.	Создайте двух пользователей которые имеют доступ к базе данных shop. Первому пользователю shop_read должны 
-- быть доступны только запросы на чтение данных, второму пользователю shop — любые операции в пределах базы данных shop.


-- 2.	(по желанию) Пусть имеется таблица accounts содержащая три столбца id, name, password, содержащие первичный ключ, 
-- имя пользователя и его пароль. Создайте представление username таблицы accounts, предоставляющий доступ к столбца id 
-- и name. Создайте пользователя user_read, который бы не имел доступа к таблице accounts, однако, мог бы извлекать записи 
-- из представления username.


-- Практическое задание по теме “Хранимые процедуры и функции, триггеры"
-- 1.	Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. 
-- С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу 
-- "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".
DELIMITER //

DROP FUNCTION IF EXISTS hello//
CREATE FUNCTION hello() 
RETURNS TEXT 
DETERMINISTIC
BEGIN
	RETURN 
	CASE
    	WHEN CURTIME() < "06:00:00" THEN "Доброй ночи"
    	WHEN CURTIME() < "12:00:00" THEN "Доброе утро"
    	WHEN CURTIME() < "18:00:00" THEN "Добрый день"
    	ELSE "Добрый вечер"
    END;
END //

DELIMITER ;

-- проверка работы функции
select hello() as time_now;

-- 2.	В таблице products есть два текстовых поля: name с названием товара и description с его описанием. Допустимо 
-- присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. 
-- Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить полям 
-- NULL-значение необходимо отменить операцию.
DELIMITER //

CREATE TRIGGER check_insert BEFORE INSERT ON products FOR EACH ROW
BEGIN
	IF (NEW.name IS NULL AND NEW.description IS NULL)
    	THEN SIGNAL SQLSTATE '45000' SET message_text = "Имя продукта и описание не может быть NULL"; 
	END IF;
END; //

CREATE TRIGGER check_update BEFORE UPDATE ON products FOR EACH ROW
BEGIN
	IF (NEW.name IS NULL AND NEW.description IS NULL)
    	THEN SIGNAL SQLSTATE '45000' SET message_text = "Имя продукта и описание не может быть NULL"; 
	END IF;
END; //

-- 3.	(по желанию) Напишите хранимую функцию для вычисления произвольного числа Фибоначчи. Числами Фибоначчи называется 
-- последовательность в которой число равно сумме двух предыдущих чисел. Вызов функции FIBONACCI(10) должен возвращать 
-- число 55.
